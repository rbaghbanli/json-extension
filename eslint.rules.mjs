const rules = {
	"@typescript-eslint/block-spacing": [ "error", "always" ],
	"@typescript-eslint/brace-style": [ "error", "stroustrup", { allowSingleLine: true } ],
	"@typescript-eslint/comma-spacing": [ "error", { "before": false, "after": true } ],
	"@typescript-eslint/consistent-type-assertions": [ "error", { assertionStyle: 'as', objectLiteralTypeAssertions: 'allow-as-parameter' } ],
	"@typescript-eslint/consistent-type-definitions": "error",
	"@typescript-eslint/func-call-spacing": [ "error", "never" ],
	"@typescript-eslint/key-spacing": [ "error", { beforeColon: false, afterColon: true } ],
	"@typescript-eslint/keyword-spacing": [ "error", { before: true, after: true } ],
	"@typescript-eslint/no-explicit-any": "off",
	"@typescript-eslint/no-extra-parens": "error",
	"@typescript-eslint/no-extra-semi": "error",
	"@typescript-eslint/no-misused-promises": "off",
	"@typescript-eslint/no-unsafe-assignment": "off",
	"@typescript-eslint/no-unsafe-call": "off",
	"@typescript-eslint/no-unsafe-member-access": "off",
	"@typescript-eslint/object-curly-spacing": [ "error", "always" ],
	"@typescript-eslint/restrict-template-expressions": "off",
	"@typescript-eslint/space-before-blocks": "error",
	"@typescript-eslint/space-before-function-paren": [ "error", { "anonymous": "never", "named": "never", "asyncArrow": "always" } ],
	"@typescript-eslint/space-infix-ops": "error",
	"@typescript-eslint/type-annotation-spacing": [ "error", { "before": false, "after": true } ],
	"arrow-parens": "error",
	"arrow-spacing": [ "error", { "before": false, "after": true } ],
	"array-bracket-spacing": [ "error", "always" ],
	"computed-property-spacing": [ "error", "always" ],
	"curly": "error",
	"func-call-spacing": "off",
	"generator-star-spacing": [ "error", { "before": true, "after": false } ],
	"indent": [ "error", "tab" ],
	"no-mixed-spaces-and-tabs": "error",
	"space-in-parens": [ "error", "never" ],
};

export default rules;
